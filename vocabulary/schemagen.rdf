<?xml version='1.0'?>

<!DOCTYPE rdf:RDF [
    <!ENTITY jena    'http://jena.hpl.hp.com/'>
    <!ENTITY rdf     'http://www.w3.org/1999/02/22-rdf-syntax-ns#'>
    <!ENTITY rdfs    'http://www.w3.org/2000/01/rdf-schema#'>
    <!ENTITY owl     'http://www.w3.org/2002/07/owl#'>
    <!ENTITY xsd     'http://www.w3.org/2001/XMLSchema#'>
    <!ENTITY base    '&jena;2003/04/schemagen'>
    <!ENTITY sgen    '&base;#'>
]>

<rdf:RDF
  xmlns:rdf   ="&rdf;"
  xmlns:rdfs  ="&rdfs;"
  xmlns:owl   ="&owl;"
  xmlns:sgen  ="&sgen;"
  xmlns       ="&sgen;"
  xml:base    ="&base;"
>

<!--
	Schemagen configuration for use with jena.schemagen
	Author: Andreas Langegger <al@jku.at>
-->

<sgen:Config>
    <!-- specify that the language of the source ontology is RDFS. -->
    <sgen:rdfs rdf:datatype="&xsd;boolean">true</sgen:rdfs>
    
    <!-- specify that the language of the source is OWL (the default). Note that RDFS is a subset of OWL, so this setting also suffices for RDFS -->
<!--    <sgen:owl rdf:datatype="&xsd;boolean">true</sgen:owl>-->
    
    <!-- specifies that we want the generated vocab to use OntClass, OntProperty, etc, not Resource and Property -->
    <sgen:ontology rdf:datatype="&xsd;boolean">true</sgen:ontology>
    
    <!-- specifies that we want names mapped to uppercase (as standard Java constants) -->
    <sgen:uppercase rdf:datatype="&xsd;boolean">false</sgen:uppercase>
    
    <!-- append Vocab to class name, so input beer.owl becomes BeerVocab.java -->
<!--    <sgen:classnamesuffix rdf:datatype="&xsd;string">Vocab</sgen:classnamesuffix> -->
 
    <!-- the java package that the vocabulary is in -->
    <sgen:package rdf:datatype="&xsd;string">at.jku.xlwrap.vocab</sgen:package>
    
    <!-- the template for the file header -->
<sgen:header rdf:datatype="&xsd;string">
/**
 * Copyright 2009 Andreas Langegger, andreas@langegger.at, Austria
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
%package%

%imports%

/**
 * Vocabulary definitions from %sourceURI%
 * @author Auto-generated by schemagen on %date%
 */</sgen:header>

<!-- the template for the file footer (note @footer@ is an ant-ism, will not be processed by VocabGen) -->
<sgen:footer rdf:datatype="&xsd;string">
/*
@footer@
*/
</sgen:footer>

<!-- template for extra declarations at the top of the class file -->
<sgen:declarations rdf:datatype="&xsd;string">
</sgen:declarations>

<!-- template for introducing the properties in the vocabulary -->
<sgen:propSection rdf:datatype="&xsd;string">
    /* Vocabulary properties */
</sgen:propSection>

<!-- template for introducing the classes in the vocabulary -->
<sgen:classSection rdf:datatype="&xsd;string">
    /* Vocabulary classes */
</sgen:classSection>

<!-- template for introducing the individuals in the vocabulary -->
<sgen:individualsSection rdf:datatype="&xsd;string">
    /* Vocabulary individuals */
</sgen:individualsSection>

<!-- template for doing fancy declarations of individuals -->
<!--<sgen:individualTemplate rdf:datatype="&xsd;string">public static final KsSymbol %valname% = s_vf.newSymbol( "%valuri%" );

    /** Ontology individual corresponding to {@link #%valname%} */
    public static final %valclass% _%valname% = m_model.%valcreator%( %valtype%, "%valuri%" );
</sgen:individualTemplate>

--></sgen:Config>

</rdf:RDF>
